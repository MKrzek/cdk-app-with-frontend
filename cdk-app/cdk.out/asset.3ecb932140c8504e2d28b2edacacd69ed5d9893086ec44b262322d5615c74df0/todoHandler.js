"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
const AWS = require("aws-sdk");
const tableName = (_a = process.env.TABLE_NAME) !== null && _a !== void 0 ? _a : "";
const dynamodb = new AWS.DynamoDB.DocumentClient();
const createResponse = (body, statusCode = 200) => ({
    statusCode,
    body: JSON.stringify(body, null, 2)
});
const getAllTodos = async () => {
    return await dynamodb.scan({
        TableName: tableName
    }).promise();
};
exports.handler = async function (event) {
    var _a;
    try {
        const { httpMethod, body: requestBody } = event;
        if (httpMethod === "GET") {
            const response = await getAllTodos();
            return createResponse((_a = response === null || response === void 0 ? void 0 : response.Items) !== null && _a !== void 0 ? _a : []);
        }
        return createResponse(`We only accept GET request for now, not ${httpMethod}`);
    }
    catch (error) {
        console.log('error', error);
        return createResponse(error, 500);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9kb0hhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0b2RvSGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSwrQkFBK0I7QUFDL0IsTUFBTSxTQUFTLFNBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLG1DQUFJLEVBQUUsQ0FBQztBQUMvQyxNQUFNLFFBQVEsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUE7QUFFbEQsTUFBTSxjQUFjLEdBQUcsQ0FDbkIsSUFBbUQsRUFDbkQsVUFBVSxHQUFHLEdBQUcsRUFDbEIsRUFBRSxDQUFDLENBQUM7SUFDRixVQUFVO0lBQ1YsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7Q0FDdEMsQ0FBQyxDQUFBO0FBQ0YsTUFBTSxXQUFXLEdBQUcsS0FBSyxJQUFJLEVBQUU7SUFDM0IsT0FBTyxNQUFNLFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDdkIsU0FBUyxFQUFFLFNBQVM7S0FDdkIsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFBO0FBRWhCLENBQUMsQ0FBQTtBQUVELE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxXQUFXLEtBQWdDOztJQUM5RCxJQUFJO1FBQ0EsTUFBTSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEdBQUcsS0FBSyxDQUFBO1FBQy9DLElBQUksVUFBVSxLQUFLLEtBQUssRUFBRTtZQUN0QixNQUFNLFFBQVEsR0FBRyxNQUFNLFdBQVcsRUFBRSxDQUFBO1lBQ3BDLE9BQU8sY0FBYyxPQUFDLFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxLQUFLLG1DQUFJLEVBQUUsQ0FBQyxDQUFBO1NBQy9DO1FBQ0QsT0FBTyxjQUFjLENBQUMsMkNBQTJDLFVBQVUsRUFBRSxDQUFDLENBQUM7S0FDbEY7SUFBQyxPQUFPLEtBQUssRUFBRTtRQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzVCLE9BQU8sY0FBYyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQTtLQUNwQztBQUNMLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IEFXUyA9IHJlcXVpcmUoJ2F3cy1zZGsnKVxuY29uc3QgdGFibGVOYW1lID0gcHJvY2Vzcy5lbnYuVEFCTEVfTkFNRSA/PyBcIlwiO1xuY29uc3QgZHluYW1vZGIgPSBuZXcgQVdTLkR5bmFtb0RCLkRvY3VtZW50Q2xpZW50KClcblxuY29uc3QgY3JlYXRlUmVzcG9uc2UgPSAoXG4gICAgYm9keTogc3RyaW5nIHwgQVdTLkR5bmFtb0RCLkRvY3VtZW50Q2xpZW50Lkl0ZW1MaXN0LFxuICAgIHN0YXR1c0NvZGUgPSAyMDBcbikgPT4gKHtcbiAgICBzdGF0dXNDb2RlLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHksIG51bGwsIDIpXG59KVxuY29uc3QgZ2V0QWxsVG9kb3MgPSBhc3luYyAoKSA9PiB7XG4gICAgcmV0dXJuIGF3YWl0IGR5bmFtb2RiLnNjYW4oe1xuICAgICAgICBUYWJsZU5hbWU6IHRhYmxlTmFtZVxuICAgIH0pLnByb21pc2UoKVxuXG59XG5cbmV4cG9ydHMuaGFuZGxlciA9IGFzeW5jIGZ1bmN0aW9uIChldmVudDogQVdTTGFtYmRhLkFQSUdhdGV3YXlFdmVudCkge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHsgaHR0cE1ldGhvZCwgYm9keTogcmVxdWVzdEJvZHkgfSA9IGV2ZW50XG4gICAgICAgIGlmIChodHRwTWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGdldEFsbFRvZG9zKClcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVSZXNwb25zZShyZXNwb25zZT8uSXRlbXMgPz8gW10pXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNyZWF0ZVJlc3BvbnNlKGBXZSBvbmx5IGFjY2VwdCBHRVQgcmVxdWVzdCBmb3Igbm93LCBub3QgJHtodHRwTWV0aG9kfWApO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZVJlc3BvbnNlKGVycm9yLCA1MDApXG4gICAgfVxufSJdfQ==